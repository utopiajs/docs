---
import AstroIconChevronDown from "~/icons/AstroIconChevronDown.astro";
import AstroIconMoreHorizontal from "~/icons/AstroIconMoreHorizontal.astro";
import NavMenu from "./NavMenu.astro";
const { icon, button, label, items, class: className } = Astro.props;
---

<div class:list={[...className, "fly-out"]}>
  <button class="button">
    {
      button || icon ? (
        <span class="text">
          {button}
          <AstroIconChevronDown class="text-icon" />
        </span>
      ) : (
        <AstroIconMoreHorizontal class="icon" />
      )
    }
  </button>
  <div class="menu">
    <NavMenu items={items}>
      <slot />
    </NavMenu>
  </div>
</div>

<style>
  .fly-out {
    position: relative;
  }

  .fly-out:hover {
    color: var(--astro-c-brand);
    transition: color 0.25s;
  }

  .fly-out:hover .text {
    color: var(--astro-c-text-2);
  }

  .fly-out:hover .icon {
    fill: var(--astro-c-text-2);
  }

  .fly-out.active .text {
    border-bottom: 1px solid var(--astro-c-brand);
  }

  .fly-out:hover .menu,
  .button[aria-expanded="true"] + .menu {
    opacity: 1;
    visibility: visible;
    transform: translateY(0);
  }

  .button {
    display: flex;
    align-items: center;
    padding: 0 12px;
    height: 55px;
    color: var(--astro-c-text-1);
    transition: color 0.5s;
  }

  .text {
    display: flex;
    align-items: center;
    line-height: 55px;
    font-size: 14px;
    font-weight: 500;
    color: var(--astro-c-text-1);
    transition: color 0.25s;
  }

  .option-icon {
    margin-right: 0px;
    width: 16px;
    height: 16px;
    fill: currentColor;
  }

  .fly-out :global(.text-icon) {
    margin-left: 4px;
    width: 14px;
    height: 14px;
    fill: currentColor;
  }

  .menu {
    position: absolute;
    top: calc(var(--astro-nav-height) / 2 + 15px);
    right: 0;
    opacity: 0;
    visibility: hidden;
    transition:
      opacity 0.25s,
      visibility 0.25s,
      transform 0.25s;
  }
</style>